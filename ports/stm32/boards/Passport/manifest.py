# SPDX-FileCopyrightText: Â© 2021 Foundation Devices, Inc. <hello@foundationdevices.com>
# SPDX-License-Identifier: GPL-3.0-or-later
#

# Keep lists below sorted for easier reference

freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('callgate.py',
        'chains.py',
        'common.py',
        'compat7z.py',
        'constants.py',
        'descriptor.py',
        'derived_key.py',
        'display.py',
        'Enum.py',
        'errors.py',
        'exceptions.py',
        'export.py',
        'ext_settings.py',
        'files.py',
        'history.py',
        'keypad_manager.py',
        'keypad.py',
        'keys.py',
        'main.py',
        'menus.py',
        'multisig_wallet.py',
        'opcodes.py',
        'pincodes.py',
        'predictive_utils.py',
        'psbt.py',
        'public_constants.py',
        'schema_evolution.py',
        'se_commands.py',
        'system_test_ux.py',
        'serializations.py',
        'settings.py',
        'sffile.py',
        'sflash.py',
        'stash.py',
        'stat.py',
        'taproot.py',
        't9.py',
        'utils.py',
        'version.py',
        ))

# Animations
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('animations/__init__.py',
        'animations/card_anim.py',
        'animations/constants.py',
        'animations/page_anim.py',
        'animations/prop_cb.py'))

# Data codecs
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('data_codecs/__init__.py',
        'data_codecs/address_sampler.py',
        'data_codecs/compact_seedqr_codec.py',
        'data_codecs/data_decoder.py',
        'data_codecs/data_encoder.py',
        'data_codecs/data_format.py',
        'data_codecs/data_sampler.py',
        'data_codecs/http_sampler.py',
        'data_codecs/multisig_config_sampler.py',
        'data_codecs/psbt_txn_sampler.py',
        'data_codecs/qr_codec.py',
        'data_codecs/qr_factory.py',
        'data_codecs/qr_type.py',
        'data_codecs/seedqr_codec.py',
        'data_codecs/seed_sampler.py',
        'data_codecs/ur1_codec.py',
        'data_codecs/ur2_codec.py'))

# Flows
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('flows/__init__.py',
        'flows/about_flow.py',
        'flows/address_explorer_flow.py',
        'flows/apply_passphrase_flow.py',
        'flows/auto_backup_flow.py',
        'flows/backup_common_flow.py',
        'flows/backup_flow.py',
        'flows/change_pin_flow.py',
        'flows/delete_account_flow.py',
        'flows/delete_multisig_flow.py',
        'flows/envoy_setup_flow.py',

        'flows/erase_passport_flow.py',
        'flows/export_derived_key_flow.py',
        'flows/export_multisig_microsd_flow.py',
        'flows/export_multisig_qr_flow.py',
        'flows/export_summary_flow.py',
        'flows/file_picker_flow.py',
        'flows/flow.py',
        'flows/format_microsd_flow.py',
        'flows/get_seed_words_flow.py',
        'flows/health_check_common_flow.py',
        'flows/health_check_microsd_flow.py',
        'flows/health_check_qr_flow.py',
        'flows/import_multisig_wallet_flow.py',
        'flows/import_multisig_wallet_from_microsd_flow.py',
        'flows/import_multisig_wallet_from_qr_flow.py',
        'flows/initial_seed_setup_flow.py',
        'flows/install_dev_pubkey_flow.py',
        'flows/list_files_flow.py',
        'flows/login_flow.py',

        'flows/magic_scan_flow.py',
        'flows/magic_scan_import_multisig_flow.py',
        'flows/magic_scan_import_seed_flow.py',
        'flows/magic_scan_sign_psbt_flow.py',
        'flows/magic_scan_validate_address_flow.py',

        'flows/scan_qr_flow.py',
        'flows/series_of_pages_flow.py',

        'flows/system_test_flow.py',
        'flows/system_test_camera_flow.py',
        'flows/system_test_microsd_flow.py',

        'flows/main_flow.py',
        'flows/manual_setup_flow.py',
        'flows/menu_flow.py',
        'flows/new_account_flow.py',
        'flows/new_derived_key_flow.py',
        'flows/new_seed_flow.py',
        'flows/connect_wallet_flow.py',
        'flows/page_flow.py',
        'flows/random_final_word_flow.py',
        'flows/read_file_flow.py',
        'flows/remove_dev_pubkey_flow.py',
        'flows/rename_account_flow.py',
        'flows/rename_derived_key_flow.py',
        'flows/rename_device_flow.py',
        'flows/rename_multisig_flow.py',
        'flows/reset_pin_flow.py',
        'flows/restore_backup_flow.py',
        'flows/restore_seed_flow.py',
        'flows/save_to_microsd_flow.py',
        'flows/scv_flow.py',
        'flows/seed_warning_flow.py',
        'flows/select_setup_mode_flow.py',
        'flows/selected_file_flow.py',
        'flows/set_chain_flow.py',
        'flows/set_initial_pin_flow.py',
        'flows/show_security_words_setting_flow.py',
        'flows/sign_psbt_common_flow.py',
        'flows/sign_psbt_microsd_flow.py',
        'flows/sign_psbt_qr_flow.py',
        'flows/sign_text_file_flow.py',
        'flows/terms_of_use_flow.py',
        'flows/update_firmware_flow.py',
        'flows/verify_address_flow.py',
        'flows/verify_backup_flow.py',
        'flows/view_backup_code_flow.py',
        'flows/view_current_firmware_flow.py',
        'flows/view_derived_key_details_flow.py',
        'flows/view_dev_pubkey_flow.py',
        'flows/view_multisig_details_flow.py',
        'flows/view_seed_words_flow.py'))

# Microns
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('microns/__init__.py'))

# Pages
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('pages/__init__.py',
        'pages/account_details_page.py',
        'pages/address_explorer_page.py',
        'pages/backup_code_page.py',
        'pages/battery_page.py',
        'pages/brandmark_page.py',
        'pages/chooser_page.py',
        'pages/color_picker_page.py',
        'pages/error_page.py',
        'pages/file_picker_page.py',
        'pages/info_page.py',
        'pages/insert_microsd_page.py',
        'pages/long_error_page.py',
        'pages/long_question_page.py',
        'pages/long_success_page.py',
        'pages/long_text_page.py',
        'pages/menu_page.py',
        'pages/page.py',
        'pages/pin_entry_page.py',
        'pages/predictive_text_input_page.py',
        'pages/progress_page.py',
        'pages/question_page.py',
        'pages/seed_words_list_page.py',
        'pages/scan_qr_page.py',
        'pages/shield_page.py',
        'pages/show_qr_page.py',
        'pages/shutdown_page.py',
        'pages/spinner_page.py',
        'pages/status_page.py',
        'pages/success_page.py',
        'pages/text_input_page.py',

        # Setting pages
        'pages/setting_page.py',
        'pages/auto_shutdown_setting_page.py',
        'pages/brightness_setting_page.py',
        'pages/chain_setting_page.py',
        'pages/multisig_policy_setting_page.py',
        'pages/units_setting_page.py',

        # Chooser pages
        'pages/accept_terms_chooser_page.py',
        'pages/address_type_chooser_page.py',
        'pages/export_mode_chooser_page.py',
        'pages/recovery_mode_chooser_page.py',
        'pages/setup_mode_chooser_page.py',
        'pages/singlesig_multisig_chooser_page.py',
        'pages/sig_type_chooser_page.py',
        'pages/sw_wallet_chooser_page.py',
        'pages/yes_no_chooser_page.py',

        # Test pages
        'pages/test_keypad_page.py',
        ))

# Screens
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('screens/__init__.py',
        'screens/main_screen.py'))

# Styles
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('styles/__init__.py',
        'styles/colors.py',
        'styles/font_sizes.py',
        'styles/local_style.py',
        'styles/style.py'))

# Tasks
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('tasks/__init__.py',
        'tasks/apply_passphrase_task.py',
        'tasks/auto_shutdown_task.py',
        'tasks/battery_adc_task.py',
        'tasks/bip85_seed_task.py',
        'tasks/calculate_file_sha256_task.py',
        'tasks/card_task.py',
        'tasks/change_pin_task.py',
        'tasks/copy_psbt_file_to_external_flash_task.py',
        'tasks/copy_psbt_to_external_flash_task.py',
        'tasks/clear_psbt_from_external_flash_task.py',
        'tasks/custom_microsd_write_task.py',
        'tasks/double_check_psbt_change_task.py',
        'tasks/create_wallet_export_task.py',
        'tasks/copy_firmware_to_spi_flash_task.py',
        'tasks/charge_monitor_task.py',
        'tasks/delete_account_task.py',
        'tasks/delete_multisig_task.py',
        'tasks/delay_task.py',
        'tasks/erase_passport_task.py',
        'tasks/format_microsd_task.py',
        'tasks/fuelgauge_task.py',
        'tasks/generate_addresses_task.py',
        'tasks/get_backup_code_task.py',
        'tasks/get_security_words_task.py',
        'tasks/get_seed_words_task.py',
        'tasks/login_task.py',
        'tasks/lvgl_task.py',
        'tasks/main_task.py',
        'tasks/make_microsd_file_system_task.py',
        'tasks/new_seed_task.py',
        'tasks/nostr_key_task.py',
        'tasks/power_button_task.py',
        'tasks/read_file_task.py',
        'tasks/rename_account_task.py',
        'tasks/rename_derived_key_task.py',
        'tasks/rename_multisig_task.py',
        'tasks/restore_backup_task.py',
        'tasks/save_multisig_wallet_task.py',
        'tasks/save_new_account_task.py',
        'tasks/save_new_derived_key_task.py',
        'tasks/save_seed_task.py',
        'tasks/search_for_address_task.py',
        'tasks/set_initial_pin_task.py',
        'tasks/sign_psbt_task.py',
        'tasks/sign_text_file_task.py',
        'tasks/validate_psbt_task.py',
        'tasks/verify_backup_task.py'))

# Translations
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('translations/__init__.py',
        'translations/en.py',
        'translations/tags.py'))

# UI
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('ui/__init__.py',
        'ui/ui.py'))

# Views
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('views/__init__.py',
        'views/arc.py',
        'views/backup_code_section.py',
        'views/battery_indicator.py',
        'views/bold_label.py',
        'views/button.py',
        'views/camera.py',
        'views/card.py',
        'views/card_nav.py',
        'views/color_picker.py',
        'views/container.py',
        'views/file_item.py',
        'views/filler.py',
        'views/icon.py',
        'views/icon_button.py',
        'views/image.py',
        'views/keyboard.py',
        'views/keypad.py',
        'views/label.py',
        'views/line.py',
        'views/list_item.py',
        'views/menu_item.py',
        'views/micron_bar.py',
        'views/pin_input.py',
        'views/qrcode.py',
        'views/slider.py',
        'views/spinner.py',
        'views/statusbar.py',
        'views/switch.py',
        'views/symbol_picker.py',
        'views/table.py',
        'views/text_area.py',
        'views/text_input.py',
        'views/verified_icon.py',
        'views/view.py'))

# Wallets
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('wallets/__init__.py',
        'wallets/bitcoin_core.py',
        'wallets/bluewallet.py',
        'wallets/btcpay.py',
        'wallets/caravan.py',
        'wallets/casa.py',
        'wallets/constants.py',
        'wallets/dux_reserve.py',
        'wallets/electrum.py',
        'wallets/envoy.py',
        'wallets/fullynoded.py',
        'wallets/generic_json_wallet.py',
        'wallets/gordian.py',
        'wallets/lily.py',
        'wallets/multisig_import.py',
        'wallets/multisig_json.py',
        'wallets/nunchuk.py',
        'wallets/simple_bitcoin_wallet.py',
        'wallets/sparrow.py',
        'wallets/specter.py',
        'wallets/sw_wallets.py',
        'wallets/utils.py',
        'wallets/vault.py',
        'wallets/keeper.py',
        'wallets/theya.py'))

# Extensions
freeze('$(MPY_DIR)/ports/stm32/boards/Passport/modules',
       ('extensions/__init__.py',
        'extensions/extensions.py',
        'extensions/casa_extension.py',
        'extensions/postmix_extension.py',
        'extensions/key_manager_extension.py',
        'extensions/theya_extension.py'))

include("$(MPY_DIR)/extmod/uasyncio/manifest.py")
